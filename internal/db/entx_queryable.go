// Code generated by ent, DO NOT EDIT.

package db

import "context"

func (tx *Tx) Queryable(ctx context.Context) Queryable {
	return &genericQueryable{ctx: ctx, tx: tx}
}

func (client *Client) Queryable(ctx context.Context) Queryable {
	return &genericQueryable{ctx: ctx, database: client}
}

type genericQueryable struct {
	ctx context.Context

	tx       *Tx
	database *Client
}

func (gq *genericQueryable) Context() context.Context {
	return gq.ctx
}

func (gq *genericQueryable) TokenClient() *TokenClient {
	if gq.tx != nil {
		return gq.tx.Token
	}

	return gq.database.Token
}

func (gq *genericQueryable) UserClient() *UserClient {
	if gq.tx != nil {
		return gq.tx.User
	}

	return gq.database.User
}

type Queryable interface {
	Context() context.Context

	TokenClient() *TokenClient

	UserClient() *UserClient
}
